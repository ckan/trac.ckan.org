id,summary,reporter,owner,description,type,status,priority,milestone,component,resolution,keywords,cc,repo,theme
436,Investigate exception: resource search JSON,dread,,"Here's the dump from 22:10 last night:

URL: http://ckan.net/api/search/resource?all_fields=1&offset=0&limit=20&qjson=%3Cspan%20class=
Module weberror.errormiddleware:162 in __call__
<<              __traceback_supplement__ = Supplement, self, environ
                   sr_checker = ResponseStartChecker(start_response)
                   app_iter = self.application(environ, sr_checker)
                   return self.make_catching_iter(app_iter, environ, sr_checker)
               except:
>>  app_iter = self.application(environ, sr_checker)
Module beaker.middleware:73 in __call__
<<                                                     self.cache_manager)
               environ[self.environ_key] = self.cache_manager
               return self.app(environ, start_response)
>>  return self.app(environ, start_response)
Module beaker.middleware:152 in __call__
<<                          headers.append(('Set-cookie', cookie))
                   return start_response(status, headers, exc_info)
               return self.wrap_app(environ, session_start_response)
           
           def _get_session(self):
>>  return self.wrap_app(environ, session_start_response)
Module routes.middleware:130 in __call__
<<                  environ['SCRIPT_NAME'] = environ['SCRIPT_NAME'][:-1]
               
               response = self.app(environ, start_response)
               
               # Wrapped in try as in rare cases the attribute will be gone already
>>  response = self.app(environ, start_response)
Module pylons.wsgiapp:125 in __call__
<<          
               controller = self.resolve(environ, start_response)
               response = self.dispatch(controller, environ, start_response)
               
               if 'paste.testing_variables' in environ and hasattr(response,
>>  response = self.dispatch(controller, environ, start_response)
Module pylons.wsgiapp:324 in dispatch
<<          if log_debug:
                   log.debug(""Calling controller class with WSGI interface"")
               return controller(environ, start_response)
           
           def load_test_env(self, environ):
>>  return controller(environ, start_response)
Module ckan.lib.base:73 in __call__
<<          # available in environ['pylons.routes_dict']    
               try:
                   return WSGIController.__call__(self, environ, start_response)
               finally:
                   model.Session.remove()
>>  return WSGIController.__call__(self, environ, start_response)
Module pylons.controllers.core:221 in __call__
<<                  return response(environ, self.start_response)
               
               response = self._dispatch_call()
               if not start_response_called:
                   self.start_response = start_response
>>  response = self._dispatch_call()
Module pylons.controllers.core:172 in _dispatch_call
<<              req.environ['pylons.action_method'] = func
                   
                   response = self._inspect_call(func)
               else:
                   if log_debug:
>>  response = self._inspect_call(func)
Module pylons.controllers.core:107 in _inspect_call
<<                        func.__name__, args)
               try:
                   result = self._perform_call(func, args)
               except HTTPException, httpe:
                   if log_debug:
>>  result = self._perform_call(func, args)
Module pylons.controllers.core:60 in _perform_call
<<          """"""Hide the traceback for everything above this method""""""
               __traceback_hide__ = 'before_and_this'
               return func(**args)
           
           def _inspect_call(self, func):
>>  return func(**args)
Module ckan.controllers.rest:400 in search
<<                      response.status_int = 400
                           return gettext('Blank qjson parameter')
                       params = json.loads(request.params['qjson'])
                   elif request.params.values() and request.params.values() != [u''] and request.params.values() != [u'1']:
                       params = request.params
>>  params = json.loads(request.params['qjson'])
Module simplejson:384 in loads
<<              parse_constant is None and object_pairs_hook is None
                   and not use_decimal and not kw):
               return _default_decoder.decode(s)
           if cls is None:
               cls = JSONDecoder
>>  return _default_decoder.decode(s)
Module simplejson.decoder:402 in decode
<<          """"""
               obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               end = _w(s, end).end()
               if end != len(s):
>>  obj, end = self.raw_decode(s, idx=_w(s, 0).end())
Module simplejson.decoder:420 in raw_decode
<<              obj, end = self.scan_once(s, idx)
               except StopIteration:
                   raise JSONDecodeError(""No JSON object could be decoded"", s, idx)
               return obj, end
>>  raise JSONDecodeError(""No JSON object could be decoded"", s, idx)
JSONDecodeError: No JSON object could be decoded: line 1 column 0 (char 0)
CGI Variables
DOCUMENT_ROOT	'/htdocs'
GATEWAY_INTERFACE	'CGI/1.1'
HTTP_ACCEPT	'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8, application/json'
HTTP_ACCEPT_CHARSET	'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
HTTP_ACCEPT_ENCODING	'gzip,deflate'
HTTP_ACCEPT_LANGUAGE	'en-us,en;q=0.5'
HTTP_CONNECTION	'keep-alive'
HTTP_COOKIE	'__utma=27730403.1245320310.1281386803.1281386803.1282164955.2; __utmz=27730403.1282164955.2.2.utmcsr=jira|utmccn=(referral)|utmcmd=referral|utmcct=/browse/PLATFORM-892; __utmb=27730403.3.10.1282164955; __utmc=27730403'
HTTP_HOST	'ckan.net'
HTTP_KEEP_ALIVE	'300'
HTTP_REFERER	'http://jira/browse/PLATFORM-892'
HTTP_USER_AGENT	'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7'
PATH	'/usr/local/bin:/usr/bin:/bin'
PATH_INFO	'/api/search/resource'
PATH_TRANSLATED	'/home/okfn/var/srvc/ckan.net/pyenv/bin/ckan.net.py/api/search/resource'
QUERY_STRING	'all_fields=1&offset=0&limit=20&qjson=%3Cspan%20class='
REMOTE_ADDR	'64.235.97.218'
REMOTE_PORT	'20720'
REQUEST_METHOD	'GET'
REQUEST_URI	'/api/search/resource?all_fields=1&offset=0&limit=20&qjson=%3Cspan%20class='
SCRIPT_FILENAME	'/home/okfn/var/srvc/ckan.net/pyenv/bin/ckan.net.py'
SCRIPT_URI	'http://ckan.net/api/search/resource'
SCRIPT_URL	'/api/search/resource'
SERVER_ADDR	'10.226.226.118'
SERVER_ADMIN	'[no address given]'
SERVER_NAME	'ckan.net'
SERVER_PORT	'80'
SERVER_PROTOCOL	'HTTP/1.1'
SERVER_SIGNATURE	'<address>Apache/2.2.9 (Debian) mod_wsgi/2.5 Python/2.5.2 Server at ckan.net Port 80</address>\n'
SERVER_SOFTWARE	'Apache/2.2.9 (Debian) mod_wsgi/2.5 Python/2.5.2'
WSGI Variables
application	<beaker.middleware.CacheMiddleware object at 0xa1c13ec>
beaker.cache	<beaker.cache.CacheManager object at 0xa1c142c>
beaker.get_session	<bound method SessionMiddleware._get_session of <beaker.middleware.SessionMiddleware object at 0xa1c12ac>>
beaker.session	{'_accessed_time': 1282165818.0880959, '_creation_time': 1282165818.0880959}
mod_wsgi.application_group	'ckan.net|'
mod_wsgi.callable_object	'application'
mod_wsgi.listener_host	''
mod_wsgi.listener_port	'80'
mod_wsgi.process_group	''
mod_wsgi.reload_mechanism	'0'
mod_wsgi.script_reloading	'1'
mod_wsgi.version	(2, 5)
paste.cookies	(<SimpleCookie: __utma='27730403.1245320310.1281386803.1281386803.1282164955.2' __utmb='27730403.3.10.1282164955' __utmc='27730403' __utmz='27730403.1282164955.2.2.utmcsr=jira|utmccn=(referral)|utmcmd=referral|utmcct=/browse/PLATFORM-892'>, '__utma=27730403.1245320310.1281386803.1281386803.1282164955.2; __utmz=27730403.1282164955.2.2.utmcsr=jira|utmccn=(referral)|utmcmd=referral|utmcct=/browse/PLATFORM-892; __utmb=27730403.3.10.1282164955; __utmc=27730403')
paste.parsed_querystring	([('all_fields', '1'), ('offset', '0'), ('limit', '20'), ('qjson', '<span class=')], 'all_fields=1&offset=0&limit=20&qjson=%3Cspan%20class=')
paste.registry	<paste.registry.Registry object at 0x130ed84c>
paste.throw_errors	True
pylons.action_method	<bound method RestController.search of <ckan.controllers.rest.RestController object at 0xe9bbe0c>>
pylons.controller	<ckan.controllers.rest.RestController object at 0xe9bbe0c>
pylons.environ_config	{'session': 'beaker.session', 'cache': 'beaker.cache'}
pylons.pylons	<pylons.util.PylonsContext object at 0xe9bbe8c>
pylons.routes_dict	{'action': u'search', 'controller': u'rest', 'register': u'resource'}
repoze.who.logger	<logging.Logger instance at 0xa3cb0cc>
repoze.who.plugins	{'openid': <OpenIdIdentificationPlugin 170067148>, 'auth_tkt': <AuthTktCookiePlugin 171739788>}
routes.route	<routes.route.Route object at 0xa102fac>
routes.url	<routes.util.URLGenerator object at 0x13a5a3cc>
webob._parsed_query_vars	(GET([('all_fields', '1'), ('offset', '0'), ('limit', '20'), ('qjson', '<span class=')]), 'all_fields=1&offset=0&limit=20&qjson=%3Cspan%20class=')
webob.adhoc_attrs	{'language': 'en-us'}
wsgi process	'Multi process AND threads (?)'
wsgi.file_wrapper	<built-in method file_wrapper of mod_wsgi.Adapter object at 0x12f53530>
wsgiorg.routing_args	(<routes.util.URLGenerator object at 0x13a5a3cc>, {'action': u'search', 'controller': u'rest', 'register': u'resource'})
",bug,closed,,ckan-v1.2,,wontfix,,,,
