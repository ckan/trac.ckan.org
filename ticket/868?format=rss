<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>CKAN: Ticket #868: Test improvements</title>
    <link>http://localhost/ticket/868</link>
    <description>&lt;p&gt;
The tests currently take 41 mins to run on most laptops. This slows down development and discourages a test-driven approach.
&lt;/p&gt;
&lt;p&gt;
We'd like to see the tests pass in 5 mins or less (but anything would be an improvement!)
&lt;/p&gt;
&lt;p&gt;
Some suggestions for achieving this include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Upgrading the entire codebase to SQLAlchemy 0.6 so that tests could run against an in-memory SQLite database
&lt;/li&gt;&lt;li&gt;Not setting up and tearing down the database so frequently.
&lt;/li&gt;&lt;/ul&gt;</description>
    <language>en-us</language>
    <image>
      <title>CKAN</title>
      <url>http://assets.okfn.org/p/ckan/img/ckan_logo_shortname.png</url>
      <link>http://localhost/ticket/868</link>
    </image>
    <generator>Trac 0.12.3</generator>
    <item>
      
        <dc:creator>kindly@…</dc:creator>

      <pubDate>Tue, 21 Dec 2010 00:10:51 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/868#comment:1</link>
      <guid isPermaLink="false">http://localhost/ticket/868#comment:1</guid>
      <description>
        &lt;p&gt;
Below is a patch to make the tests run at least 2.5 times faster (about 15 mins on my old laptop).  Instead of dropping the tables each time, it just deletes everything in them, using a low level connection.  All the tests pass this way. It's a surprisingly clean patch.  Here are a few points concerning it.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I tested truncating the tables but it's slower. If there are any big tables in the tests this way is the fastest (faster than drop).
&lt;/li&gt;&lt;li&gt;The sequences (id columns) will start from where they left off.
&lt;/li&gt;&lt;li&gt;I also investigated making postgres template database and cloning it, but the complication was not worth it.
&lt;/li&gt;&lt;li&gt;sqlalchemy iterates the tables in reverse dependency order, which make this possible.
&lt;/li&gt;&lt;li&gt;I targeted rebuild_db as that what most of the tests I saw where using, however I have not checked all tests to see if they all are.
&lt;/li&gt;&lt;li&gt;There is a slight hack on the repo object to make sure it knows that "clean_db" is coming from the tests.
&lt;/li&gt;&lt;li&gt;I refactored init_db for code reuse.
&lt;/li&gt;&lt;li&gt;I have not done a version check. sqlalchemy &amp;gt;= 0.5 do this in a different way as outlined in the comments.
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;diff -r 7f2239b0f743 ckan/model/__init__.py
--- a/ckan/model/__init__.py	Fri Dec 17 10:34:47 2010 +0000
+++ b/ckan/model/__init__.py	Mon Dec 20 23:25:04 2010 +0000
@@ -41,6 +41,9 @@
     def init_db(self):
         super(Repository, self).init_db()
+        self.add_initial_data()
+
+    def add_initial_data(self):
         # assume if this exists everything else does too
         if not User.by_name(PSEUDO_USER__VISITOR):
             visitor = User(name=PSEUDO_USER__VISITOR)
@@ -69,6 +72,26 @@
         import migrate.versioning.api as mig
         version = mig.version(self.migrate_repository)
         return version
+
+    def clean_db(self):
+        # delete only added for tests
+        if hasattr(self, "delete_only") and self.delete_only:
+            self.delete_all()
+        else:
+            super(Repository, self).clean_db()
+
+    def delete_all(self):
+
+        self.session.remove()
+        ## use raw connection for performance
+        connection = self.session.connection()
+        ## sqla sorts in reverse dependancy order.
+        ## in &amp;gt;= 0.5 use reversed(metadata.sorted_tables()) instead of table_iterator
+        for table in self.metadata.table_iterator():
+            connection.execute('delete from "%s"' % table.name)
+        self.session.commit()
+
+        self.add_initial_data()
     def setup_migration_version_control(self, version=None):
         import migrate.versioning.exceptions
diff -r 7f2239b0f743 ckan/tests/__init__.py
--- a/ckan/tests/__init__.py	Fri Dec 17 10:34:47 2010 +0000
+++ b/ckan/tests/__init__.py	Mon Dec 20 23:25:04 2010 +0000
@@ -55,6 +55,7 @@
 import ckan.model as model
 model.repo.rebuild_db()
+model.repo.delete_only = True
 class BaseCase(object):
&lt;/pre&gt;&lt;p&gt;
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Tue, 21 Dec 2010 08:50:28 GMT</pubDate>
      <title>owner changed</title>
      <link>http://localhost/ticket/868#comment:2</link>
      <guid isPermaLink="false">http://localhost/ticket/868#comment:2</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;owner&lt;/strong&gt;
              changed from &lt;em&gt;thejimmyg&lt;/em&gt; to &lt;em&gt;sebbacon&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
See also &lt;a class="closed ticket" href="http://localhost/ticket/867" title="enhancement: ckanclient raises exceptions (closed: fixed)"&gt;#867&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the patch.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Tue, 21 Dec 2010 08:50:56 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/868#comment:3</link>
      <guid isPermaLink="false">http://localhost/ticket/868#comment:3</guid>
      <description>
        &lt;p&gt;
I mean &lt;a class="closed ticket" href="http://localhost/ticket/876" title="enhancement: Support sqlite as a database backend for CKAN (closed: fixed)"&gt;#876&lt;/a&gt;, of course.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>kindly@…</dc:creator>

      <pubDate>Sun, 26 Dec 2010 22:13:43 GMT</pubDate>
      <title>attachment set</title>
      <link>http://localhost/ticket/868</link>
      <guid isPermaLink="false">http://localhost/ticket/868</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;attachment&lt;/strong&gt;
                set to &lt;em&gt;ckan test speed times after 0.5 upgrade.csv&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
speed per test after 0.57 upgrade
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>anonymous</dc:creator>

      <pubDate>Sun, 26 Dec 2010 22:16:48 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/868#comment:4</link>
      <guid isPermaLink="false">http://localhost/ticket/868#comment:4</guid>
      <description>
        &lt;p&gt;
Attached are the timings I have for the tests after I upgraded to 0.57 and after a few simple test tweaks.  They do not include setup and teardown time at the class level as they are not assignable to individual tests.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>kindly@…</dc:creator>

      <pubDate>Thu, 06 Jan 2011 22:55:44 GMT</pubDate>
      <title>attachment set</title>
      <link>http://localhost/ticket/868</link>
      <guid isPermaLink="false">http://localhost/ticket/868</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;attachment&lt;/strong&gt;
                set to &lt;em&gt;no_autoflush_deletes.diff&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
This is a patch so that we do not need to monkeypatch sqlalchemy dialects
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>kindly@…</dc:creator>

      <pubDate>Thu, 06 Jan 2011 22:58:00 GMT</pubDate>
      <title>attachment set</title>
      <link>http://localhost/ticket/868</link>
      <guid isPermaLink="false">http://localhost/ticket/868</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;attachment&lt;/strong&gt;
                set to &lt;em&gt;vdm_purge_no_autoflush.diff&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
This is the corrisponding patch for the vdm, so we dont need to monkeypatch sqlalchemy
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>kindly@…</dc:creator>

      <pubDate>Fri, 07 Jan 2011 01:05:41 GMT</pubDate>
      <title>attachment set</title>
      <link>http://localhost/ticket/868</link>
      <guid isPermaLink="false">http://localhost/ticket/868</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;attachment&lt;/strong&gt;
                set to &lt;em&gt;postgres_speed.diff&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
Speed up postgres by making sure postgres does not drop and reacreate each time.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Tue, 11 Jan 2011 13:46:36 GMT</pubDate>
      <title>status changed; resolution set</title>
      <link>http://localhost/ticket/868#comment:5</link>
      <guid isPermaLink="false">http://localhost/ticket/868#comment:5</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;
                changed from &lt;em&gt;new&lt;/em&gt; to &lt;em&gt;closed&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;resolution&lt;/strong&gt;
                set to &lt;em&gt;fixed&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
I've merged in David Raznick's patches:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;no_autoflush_deletes.diff cset:2b9591172182
&lt;/li&gt;&lt;li&gt;postgres_speed.diff cset:fa1b7e3a4e0f
&lt;/li&gt;&lt;li&gt;vdm_purge_no_autoflush.diff vdm cset 8accdd0b9b7f
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've also merged in Seb's fork: cset:68d63fda4814 which closes this ticket, achieving test speeds of under 3 minutes!
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item>
 </channel>
</rss>