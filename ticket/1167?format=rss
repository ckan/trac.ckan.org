<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>CKAN: Ticket #1167: Create a standard CKAN system image for Amazon EC2 (AMI)</title>
    <link>http://localhost/ticket/1167</link>
    <description>&lt;p&gt;
We should create a public AMI with CKAN pre-installed and configured such that users can easily create their own EC2 machine with a running CKAN to play with.
&lt;/p&gt;
&lt;p&gt;
There are three phases:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;[nils] Deploy an empty EC2 instance to become the CKAN image master instance
&lt;/li&gt;&lt;li&gt;Install a CKAN and give it a standard configuration.
&lt;/li&gt;&lt;li&gt;[nils] Create a AMI from the CKAN image master instance and publish it.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I am happy to do first and last. Who is installing and configuring CKAN?
&lt;/p&gt;
&lt;p&gt;
Unfortunately AMIs are specific to region, architecture and storage type. We cannot maintain too many images, so a number of choices have to be made:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Which distribution/version? &lt;strong&gt;Ubuntu 10.04 LTS&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Which architecture/instance-type? I suggest 64-bit/t1.micro
&lt;/li&gt;&lt;li&gt;Which region? I suggest us-east-1 and maybe eu-west-1
&lt;/li&gt;&lt;li&gt;Which storage type? &lt;strong&gt;EBS&lt;/strong&gt; (way easier to make an AMI from than instance-store)
&lt;/li&gt;&lt;li&gt;Install CKAN from deb packages via mercurial/virtualenv? I assume the latter because the AMI is targeted to developers?
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://alestic.com/2009/06/ec2-ami-bundle"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1&lt;/a&gt;
&lt;a class="ext-link" href="http://uec-images.ubuntu.com/releases/10.04/release/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;2&lt;/a&gt;
&lt;/p&gt;
</description>
    <language>en-us</language>
    <image>
      <title>CKAN</title>
      <url>http://assets.okfn.org/p/ckan/img/ckan_logo_shortname.png</url>
      <link>http://localhost/ticket/1167</link>
    </image>
    <generator>Trac 0.12.3</generator>
    <item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Tue, 31 May 2011 15:49:52 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1167#comment:1</link>
      <guid isPermaLink="false">http://localhost/ticket/1167#comment:1</guid>
      <description>
        &lt;p&gt;
Yes to all the above.
&lt;/p&gt;
&lt;p&gt;
Further question: which extensions should be installed as standard?  I would argue:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ckanext-stats
&lt;/li&gt;&lt;li&gt;ckanext-googleanalytics
&lt;/li&gt;&lt;li&gt;ckanext-disqus
&lt;/li&gt;&lt;li&gt;ckanext-solr (implies installing a running solr, too...)
&lt;/li&gt;&lt;li&gt;ckanext-follower
&lt;/li&gt;&lt;li&gt;ckanext-admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note that googleanalytics and disqus both require user accounts set up at the corresponding service.  Not sure how we would handle this in the instance setup.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Tue, 31 May 2011 15:52:22 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1167#comment:2</link>
      <guid isPermaLink="false">http://localhost/ticket/1167#comment:2</guid>
      <description>
        &lt;p&gt;
Another thing to consider: how do we ensure we keep a single, up-to-date version available?  (I'm thinking wrt developer / sysadmin workflow)
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Tue, 31 May 2011 16:02:30 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1167#comment:3</link>
      <guid isPermaLink="false">http://localhost/ticket/1167#comment:3</guid>
      <description>
        &lt;p&gt;
Creating the AMI is really just the icing on the cake. The hard bit is getting the packaging right so that's where we need to concentrate first. Once the packaging works we just make sure apt-get upgrade is run regularly.
&lt;/p&gt;
&lt;p&gt;
+1 to the list above.
&lt;/p&gt;
&lt;p&gt;
I also agree we should install solr by default. Who has actually done a CKAN solr install? I haven't but together with whoever has I can try to package it up.
&lt;/p&gt;
&lt;p&gt;
Wrt to usernames and passwords, I'll look into how dpkg manages those blue pop-up screens for entering configuration options.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Mon, 06 Jun 2011 11:05:18 GMT</pubDate>
      <title>cc changed</title>
      <link>http://localhost/ticket/1167#comment:4</link>
      <guid isPermaLink="false">http://localhost/ticket/1167#comment:4</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;cc&lt;/strong&gt;
              &lt;em&gt;dread&lt;/em&gt; added
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
debconf seems the preferred way to question the user post-install and run setup scripts. It seems a bit of a faff.
&lt;/p&gt;
&lt;p&gt;
The person that is able to spin up an EC2 instance is no doubt technically able enough to follow a couple of instructions in README.txt saying edit /etc/ckan/&amp;lt;instancename&amp;gt;/&amp;lt;instancename&amp;gt;.ini and add your Google Analytics credentials. So I don't think this ticket is the driver for a debconf setup.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Wed, 20 Jul 2011 16:15:16 GMT</pubDate>
      <title>status changed; resolution set</title>
      <link>http://localhost/ticket/1167#comment:5</link>
      <guid isPermaLink="false">http://localhost/ticket/1167#comment:5</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;
                changed from &lt;em&gt;new&lt;/em&gt; to &lt;em&gt;closed&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;resolution&lt;/strong&gt;
                set to &lt;em&gt;fixed&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
I've now written a 20 page guide on using CKAN on Amazon EC2. I haven't explicitly created an AMI, but I don't think we should do that anyway for a few reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it is fiddly
&lt;/li&gt;&lt;li&gt;there is no advantage to the user as CKAN installation is so easy and so well documented
&lt;/li&gt;&lt;li&gt;we don't want to have to maintain the image going forward
&lt;/li&gt;&lt;li&gt;we might not want to promote a non-open approach
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The guide will form part of Anna PS's work on the overall documentation but you can also see the original version here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://bitbucket.org/okfn/ckan-debs-public/src/489a5ecf369f/ec2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bitbucket.org/okfn/ckan-debs-public/src/489a5ecf369f/ec2/&lt;/a&gt;
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item>
 </channel>
</rss>