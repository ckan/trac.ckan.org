<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>CKAN: Ticket #1065: [super] Change Authorization System</title>
    <link>http://localhost/ticket/1065</link>
    <description>&lt;p&gt;
Child tickets
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="new ticket" href="http://localhost/ticket/1198" title="enhancement: Publisher hierarchy (new)"&gt;#1198&lt;/a&gt; Publisher hierarchy
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1050" title="enhancement: Authz lib improvement and refactor of ckan/lib/authztool.py (closed: invalid)"&gt;#1050&lt;/a&gt; Authz lib improvement and refactor of ckan/lib/authztool.py
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1004" title="defect: Group creation instructions missing (closed: fixed)"&gt;#1004&lt;/a&gt; Group creation instructions missing
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1099" title="defect: strange interactions between two browsers while playing with authz groups (closed: wontfix)"&gt;#1099&lt;/a&gt; Strange interactions between two browsers while playing with authz groups
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1115" title="defect: can have two authzgroups with the same name (closed: wontfix)"&gt;#1115&lt;/a&gt; can have two authzgroups with the same name
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1133" title="defect: command line rights manipulation doesn't work (closed: worksforme)"&gt;#1133&lt;/a&gt; command line rights manipulation doesn't work
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://localhost/ticket/1138" title="enhancement: minor navigations behave inconsistently (closed: invalid)"&gt;#1138&lt;/a&gt; minor navigations behave inconsistently
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Old ticket description:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Change name of &lt;a class="missing wiki"&gt;AuthzGroup?&lt;/a&gt; to &lt;a class="missing wiki"&gt;UserGroup?&lt;/a&gt; to reflect what it is for
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Get rid of Roles, and replace them with direct assignment of actions, even though there are many actions, and extensions can add arbitrary ones.
&lt;ul&gt;&lt;li&gt;Debatable whether we should cut the number of actions to correspond to the three roles defined by the base system.
&lt;/li&gt;&lt;li&gt;Have a method of finding roles (or, in future, actions) relevant to a given protection object (e.g. FILE-UPLOAD(ER) not relevant to Packages)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Change &lt;a class="missing wiki"&gt;UserGroups?&lt;/a&gt; so that they can have a hierarchical structure,
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="MoreinfoonHierarchychange"&gt;More info on Hierarchy change&lt;/h2&gt;
&lt;p&gt;
e.g. &lt;a class="missing wiki"&gt;UserGroup?&lt;/a&gt; NHS contains the User nhsysadmin, as well as the
&lt;a class="missing wiki"&gt;UserGroups?&lt;/a&gt; SURREY and BERKS, which themselves contain users.
&lt;/p&gt;
&lt;p&gt;
One user in SURREY is Simon the Sysadmin, who has permissions on the whole system. His permissions should not leak out to other users or groups, and user permissions generally should not.
&lt;/p&gt;
&lt;p&gt;
Each Group has permissions over various objects.
&lt;/p&gt;
&lt;p&gt;
A user has permissions in his own right, and also has the permissions of his own group, and of all the groups contained in his group, and so on recursively.
&lt;/p&gt;
&lt;p&gt;
Algorithm:
&lt;/p&gt;
&lt;p&gt;
possible(user, action, package):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
if user has permission for action on package
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
or any of have that permission
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
or any of his groups group-children (but not user-children), and so on recursively have the permission.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
    <language>en-us</language>
    <image>
      <title>CKAN</title>
      <url>http://assets.okfn.org/p/ckan/img/ckan_logo_shortname.png</url>
      <link>http://localhost/ticket/1065</link>
    </image>
    <generator>Trac 0.12.3</generator>
    <item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Mon, 04 Apr 2011 10:46:44 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1065#comment:1</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:1</guid>
      <description>
        &lt;p&gt;
To reflect further conversations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We are parking this ticket until dictization is complete
&lt;/li&gt;&lt;li&gt;We would prefer to see roles as asserted globally by default, with packages just storing exceptions.  E.g. If I am a "reader" globally, then I have "read-package" permission on all packages new and existing, unless otherwise asserted locally on a package.
&lt;/li&gt;&lt;li&gt;Also w.r.t. algorithm above, consider repoze.what's model; "possible" is analagous to "has_permission".  See &lt;a class="ext-link" href="http://what.repoze.org/docs/1.0/Manual/Predicates/Builtin.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://what.repoze.org/docs/1.0/Manual/Predicates/Builtin.html&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Tue, 05 Apr 2011 19:54:04 GMT</pubDate>
      <title>cc set</title>
      <link>http://localhost/ticket/1065#comment:2</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:2</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;cc&lt;/strong&gt;
              &lt;em&gt;dread&lt;/em&gt; added
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
Wow, lots of solutions here, and not enough evidence of the problems encountered / difficult use cases.
&lt;/p&gt;
&lt;p&gt;
I have tried here to extract what John and Seb might be suggesting is difficult with our current &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Role-based_access_control"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Role-based_access_control&lt;/a&gt; system.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;(Seb) It seems crazy to change the User-Object-Roles for every single package to 'lockdown' a CKAN instance. Instead of using Roles 'reader' &amp;amp; 'editor' we start using Roles 'logged_in_user' and 'anon_user'. Then, with only changing a couple of lines of the Role-Action table for these Roles, you can give or remove permissions to edit / create packages, groups etc.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;(John) Actions are being added all the time by migrations and extensions. I'm not sure what the problem is here - can someone explain? The separation of Users and the new Actions by adding the Role 'join' means the migration/extension can add existing Users with the new Actions. For example when we added the 'Group' protection object, logged in users could previously create groups, so it is natural to add this action to the 'editor' role. If you get rid of Roles, as John suggests, then you end up having to add as many Rights objects as users. And you might end up trying to infer new Rights on the basis of old Rights, rather than a role, which would be more natural. (Is the only reason to denormalise the UOR and RA tables the sake of ease of understanding? I would think we can explain the concept better now...!)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;(John) This Group Hierarchy description sounds a bit like earlier incarnations of the DGU requirements. "or any of his groups group-children (but not user-children)" I'm not sure I understand the user-children bit, and I'm wary of any difficult-to-grasp concept. This modelling seems to take the &lt;a class="missing wiki"&gt;UserGroup/User?&lt;/a&gt; hierarchy model and use that as a hard-coded interpretation of the Authorized permission. In contrast, in DGU Evan split the Organisation Hierarchy model from the Authorization model. Each User has explicit permissions for each Organisation he is allowed to add/edit packages for. This helps for these two use cases we have to contend with: when a user is an admin for unrelated branches of the Organisation hierarchy, and when an Organisation is actually in two branches of the Organisation hierarchy. It also seems more generally flexible.
&lt;/li&gt;&lt;/ol&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>sebbacon</dc:creator>

      <pubDate>Wed, 06 Apr 2011 07:46:34 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1065#comment:3</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:3</guid>
      <description>
        &lt;p&gt;
Re the point against my name, yes -- I think the fundamental principles of the current system are fine, but the implementation means asserting things for every single object, whereas we should be able to optimise it for the general cases -- something along the lines you suggest.
&lt;/p&gt;
&lt;p&gt;
I would be very happy to write up a full, detailed proposal for the system before we implement anything, if only as a proper straw man to have debates around.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Wed, 06 Apr 2011 09:22:27 GMT</pubDate>
      <title></title>
      <link>http://localhost/ticket/1065#comment:4</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:4</guid>
      <description>
        &lt;p&gt;
Great stuff Seb, cheers for that.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>rgrp</dc:creator>

      <pubDate>Fri, 08 Apr 2011 14:01:16 GMT</pubDate>
      <title>description changed</title>
      <link>http://localhost/ticket/1065#comment:5</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:5</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;
              modified (&lt;a href="/ticket/1065?action=diff&amp;amp;version=5"&gt;diff&lt;/a&gt;)
            &lt;/li&gt;
          &lt;/ul&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Mon, 18 Apr 2011 09:25:56 GMT</pubDate>
      <title>priority changed; milestone set</title>
      <link>http://localhost/ticket/1065#comment:6</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:6</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;priority&lt;/strong&gt;
                changed from &lt;em&gt;awaiting triage&lt;/em&gt; to &lt;em&gt;major&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;milestone&lt;/strong&gt;
                set to &lt;em&gt;ckan-v1.4-sprint-6&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
This is now more urgent and I think we have enough consensus to go ahead. See &lt;a class="closed ticket" href="http://localhost/ticket/1094" title="enhancement: [super] Refactor the Auth System (closed: duplicate)"&gt;#1094&lt;/a&gt; too.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Wed, 20 Jul 2011 15:03:28 GMT</pubDate>
      <title>description changed</title>
      <link>http://localhost/ticket/1065#comment:7</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:7</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;
              modified (&lt;a href="/ticket/1065?action=diff&amp;amp;version=7"&gt;diff&lt;/a&gt;)
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
Merging with &lt;a class="closed ticket" href="http://localhost/ticket/1094" title="enhancement: [super] Refactor the Auth System (closed: duplicate)"&gt;#1094&lt;/a&gt; so see the discussion there too.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Wed, 20 Jul 2011 16:24:27 GMT</pubDate>
      <title>description changed</title>
      <link>http://localhost/ticket/1065#comment:8</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:8</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;
              modified (&lt;a href="/ticket/1065?action=diff&amp;amp;version=8"&gt;diff&lt;/a&gt;)
            &lt;/li&gt;
          &lt;/ul&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>thejimmyg</dc:creator>

      <pubDate>Wed, 20 Jul 2011 16:40:18 GMT</pubDate>
      <title>description changed</title>
      <link>http://localhost/ticket/1065#comment:9</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:9</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;
              modified (&lt;a href="/ticket/1065?action=diff&amp;amp;version=9"&gt;diff&lt;/a&gt;)
            &lt;/li&gt;
          &lt;/ul&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>rgrp</dc:creator>

      <pubDate>Thu, 13 Oct 2011 17:58:41 GMT</pubDate>
      <title>status, milestone changed; owner set</title>
      <link>http://localhost/ticket/1065#comment:10</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:10</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;owner&lt;/strong&gt;
              set to &lt;em&gt;zephod&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;
                changed from &lt;em&gt;new&lt;/em&gt; to &lt;em&gt;assigned&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;milestone&lt;/strong&gt;
                changed from &lt;em&gt;ckan-v1.5&lt;/em&gt; to &lt;em&gt;ckan-v1.6&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
Reassigning to zephod as he is looking at this. I think most of this is wontfix or will become obsolete with other stuff but worth looking at. Also moving to v1.6 at the same time.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Thu, 22 Dec 2011 10:34:01 GMT</pubDate>
      <title>status changed; resolution set</title>
      <link>http://localhost/ticket/1065#comment:11</link>
      <guid isPermaLink="false">http://localhost/ticket/1065#comment:11</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;
                changed from &lt;em&gt;assigned&lt;/em&gt; to &lt;em&gt;closed&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;resolution&lt;/strong&gt;
                set to &lt;em&gt;fixed&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
All subtickets are done now, apart from &lt;a class="new ticket" href="http://localhost/ticket/1198" title="enhancement: Publisher hierarchy (new)"&gt;#1198&lt;/a&gt; which I've moved into superticket &lt;a class="closed ticket" href="http://localhost/ticket/1477" title="enhancement: [Super] Group refactor (closed: fixed)"&gt;#1477&lt;/a&gt; Group refactor
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Change name of &lt;a class="missing wiki"&gt;AuthzGroup?&lt;/a&gt;? to &lt;a class="missing wiki"&gt;UserGroup?&lt;/a&gt;? to reflect what it is for
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is completely covered off in &lt;a class="closed ticket" href="http://localhost/ticket/1477" title="enhancement: [Super] Group refactor (closed: fixed)"&gt;#1477&lt;/a&gt; Group refactor
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Get rid of Roles, and replace them with direct assignment of actions, even though there are many actions, and extensions can add arbitrary ones.
Debatable whether we should cut the number of actions to correspond to the three roles defined by the base system.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not clear - please raise a ticket for this if still promising.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Have a method of finding roles (or, in future, actions) relevant to a given protection object (e.g. FILE-UPLOAD(ER) not relevant to Packages)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These three points I've moved into a new ticket &lt;a class="new ticket" href="http://localhost/ticket/1596" title="enhancement: Refactor authz roles (new)"&gt;#1596&lt;/a&gt; as it was getting lost rather in this one.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Change &lt;a class="missing wiki"&gt;UserGroups?&lt;/a&gt;? so that they can have a hierarchical structure,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is completely covered off in &lt;a class="closed ticket" href="http://localhost/ticket/1477" title="enhancement: [Super] Group refactor (closed: fixed)"&gt;#1477&lt;/a&gt; Group refactor
&lt;/p&gt;
&lt;p&gt;
Conclusion: closing this ticket as all points are covered or moved into tickets elsewhere
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item>
 </channel>
</rss>