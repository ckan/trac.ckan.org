<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>CKAN: Ticket #1248: License exception</title>
    <link>http://localhost/ticket/1248</link>
    <description>&lt;p&gt;
Exception received on test.ckan.net at 10.12 on 29/7/11
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://test.ckan.net/package?__cache=2759373&amp;amp;page=4
Module pylons.controllers.core:60 in _perform_call
&amp;lt;&amp;lt;          """Hide the traceback for everything above this method"""
               __traceback_hide__ = 'before_and_this'
               return func(**args)
           def _inspect_call(self, func):
&amp;gt;&amp;gt;  return func(**args)
Module ckan.controllers.package:153 in search
&amp;lt;&amp;lt;                          }
                   query = get.package_search(context,data_dict)
                   c.page = h.Page(
&amp;gt;&amp;gt;  query = get.package_search(context,data_dict)
Module ckan.logic.action.get:514 in package_search
&amp;lt;&amp;lt;      for package in query.results:
               result_dict = table_dictize(package, context)
               result_dict = _extend_package_dict(result_dict,context)
               results.append(result_dict)
&amp;gt;&amp;gt;  result_dict = _extend_package_dict(result_dict,context)
Module ckan.logic.action.get:537 in _extend_package_dict
&amp;lt;&amp;lt;      license_id = package_dict['license_id']
           if license_id:
               isopen = model.Package.get_license_register()[license_id].isopen()
               package_dict['isopen'] = isopen
           else:
&amp;gt;&amp;gt;  isopen = model.Package.get_license_register()[license_id].isopen()
Module ckan.model.license:59 in __getitem__
&amp;lt;&amp;lt;              return default
               else:
                   raise KeyError, "License not found: %s" % key
           def get(self, key, default=None):
&amp;gt;&amp;gt;  raise KeyError, "License not found: %s" % key
KeyError: u'License not found: None'
&lt;/pre&gt;&lt;p&gt;
and a similar one:
&lt;/p&gt;
&lt;pre class="wiki"&gt; http://test.ckan.net/tag/barbecue
Module pylons.wsgiapp:324 in dispatch
&amp;lt;&amp;lt;          if log_debug:
                   log.debug("Calling controller class with WSGI interface")
               return controller(environ, start_response)
           def load_test_env(self, environ):
&amp;gt;&amp;gt;  return controller(environ, start_response)
Module ckan.lib.base:118 in __call__
&amp;lt;&amp;lt;          # available in environ['pylons.routes_dict']
               try:
                   return WSGIController.__call__(self, environ, start_response)
               finally:
                   model.Session.remove()
&amp;gt;&amp;gt;  return WSGIController.__call__(self, environ, start_response)
Module pylons.controllers.core:221 in __call__
&amp;lt;&amp;lt;                  return response(environ, self.start_response)
               response = self._dispatch_call()
               if not start_response_called:
                   self.start_response = start_response
&amp;gt;&amp;gt;  response = self._dispatch_call()
Module pylons.controllers.core:172 in _dispatch_call
&amp;lt;&amp;lt;              req.environ['pylons.action_method'] = func
                   response = self._inspect_call(func)
               else:
                   if log_debug:
&amp;gt;&amp;gt;  response = self._inspect_call(func)
Module pylons.controllers.core:107 in _inspect_call
&amp;lt;&amp;lt;                        func.__name__, args)
               try:
                   result = self._perform_call(func, args)
               except HTTPException, httpe:
                   if log_debug:
&amp;gt;&amp;gt;  result = self._perform_call(func, args)
Module pylons.controllers.core:60 in _perform_call
&amp;lt;&amp;lt;          """Hide the traceback for everything above this method"""
               __traceback_hide__ = 'before_and_this'
               return func(**args)
           def _inspect_call(self, func):
&amp;gt;&amp;gt;  return func(**args)
Module ckan.controllers.tag:2 in read
Module ckan.lib.cache:167 in wrapper
&amp;lt;&amp;lt;      log = __import__("logging").getLogger("proxy_cache")
           def wrapper(func, *args, **kwargs):
               result = func(*args, **kwargs)
               pylons = get_pylons(args)
&amp;gt;&amp;gt;  result = func(*args, **kwargs)
Module ckan.controllers.tag:64 in read
&amp;lt;&amp;lt;          data_dict = {'id':id}
               try:
                   c.tag = get.tag_show(context,data_dict)
               except NotFound:
                   abort(404, _('Tag not found'))
&amp;gt;&amp;gt;  c.tag = get.tag_show(context,data_dict)
Module ckan.logic.action.get:341 in tag_show
&amp;lt;&amp;lt;      extended_packages = []
           for package in tag_dict['packages']:
               extended_packages.append(_extend_package_dict(package,context))
           tag_dict['packages'] = extended_packages
&amp;gt;&amp;gt;  extended_packages.append(_extend_package_dict(package,context))
Module ckan.logic.action.get:537 in _extend_package_dict
&amp;lt;&amp;lt;      license_id = package_dict['license_id']
           if license_id:
               isopen = model.Package.get_license_register()[license_id].isopen()
               package_dict['isopen'] = isopen
           else:
&amp;gt;&amp;gt;  isopen = model.Package.get_license_register()[license_id].isopen()
Module ckan.model.license:59 in __getitem__
&amp;lt;&amp;lt;              return default
               else:
                   raise KeyError, "License not found: %s" % key
           def get(self, key, default=None):
&amp;gt;&amp;gt;  raise KeyError, "License not found: %s" % key
KeyError: u'License not found: CreativeCommonsAttributionCCBY25'
&lt;/pre&gt;</description>
    <language>en-us</language>
    <image>
      <title>CKAN</title>
      <url>http://assets.okfn.org/p/ckan/img/ckan_logo_shortname.png</url>
      <link>http://localhost/ticket/1248</link>
    </image>
    <generator>Trac 0.12.3</generator>
    <item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Fri, 29 Jul 2011 15:43:19 GMT</pubDate>
      <title>description changed</title>
      <link>http://localhost/ticket/1248#comment:1</link>
      <guid isPermaLink="false">http://localhost/ticket/1248#comment:1</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;
              modified (&lt;a href="/ticket/1248?action=diff&amp;amp;version=1"&gt;diff&lt;/a&gt;)
            &lt;/li&gt;
          &lt;/ul&gt;
      </description>
      <category>Ticket</category>
    </item><item>
      
        <dc:creator>dread</dc:creator>

      <pubDate>Fri, 28 Oct 2011 10:29:23 GMT</pubDate>
      <title>status changed; resolution set</title>
      <link>http://localhost/ticket/1248#comment:2</link>
      <guid isPermaLink="false">http://localhost/ticket/1248#comment:2</guid>
      <description>
          &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;
                changed from &lt;em&gt;new&lt;/em&gt; to &lt;em&gt;closed&lt;/em&gt;
            &lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;resolution&lt;/strong&gt;
                set to &lt;em&gt;fixed&lt;/em&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;p&gt;
Fixed in cset:188d27a56c89c35f97f3a79fdd0a6460223f86cf on branch release-v1.4.3.
&lt;/p&gt;
&lt;p&gt;
This was only seen in CKAN 1.4.3beta.
&lt;/p&gt;
      </description>
      <category>Ticket</category>
    </item>
 </channel>
</rss>